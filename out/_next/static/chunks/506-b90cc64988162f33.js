"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[506],{2506:function(e,t,r){r.d(t,{$j:function(){return P},Dx:function(){return $},VY:function(){return k},aU:function(){return V},aV:function(){return M},dk:function(){return W},fC:function(){return _},h_:function(){return F},xz:function(){return E}});var n=r(2265),o=r(6989),i=r(2210),a=r(8712),l=r(5744),s=r(7256),u=r(7437),d="AlertDialog",[c,f]=(0,o.b)(d,[a.p8]),p=(0,a.p8)(),g=e=>{let{__scopeAlertDialog:t,...r}=e,n=p(t);return(0,u.jsx)(a.fC,{...n,...r,modal:!0})};g.displayName=d;var m=n.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...n}=e,o=p(r);return(0,u.jsx)(a.xz,{...o,...n,ref:t})});m.displayName="AlertDialogTrigger";var x=e=>{let{__scopeAlertDialog:t,...r}=e,n=p(t);return(0,u.jsx)(a.h_,{...n,...r})};x.displayName="AlertDialogPortal";var h=n.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...n}=e,o=p(r);return(0,u.jsx)(a.aV,{...o,...n,ref:t})});h.displayName="AlertDialogOverlay";var v="AlertDialogContent",[y,D]=c(v),j=n.forwardRef((e,t)=>{let{__scopeAlertDialog:r,children:o,...d}=e,c=p(r),f=n.useRef(null),g=(0,i.e)(t,f),m=n.useRef(null);return(0,u.jsx)(a.jm,{contentName:v,titleName:b,docsSlug:"alert-dialog",children:(0,u.jsx)(y,{scope:r,cancelRef:m,children:(0,u.jsxs)(a.VY,{role:"alertdialog",...c,...d,ref:g,onOpenAutoFocus:(0,l.M)(d.onOpenAutoFocus,e=>{e.preventDefault(),m.current?.focus({preventScroll:!0})}),onPointerDownOutside:e=>e.preventDefault(),onInteractOutside:e=>e.preventDefault(),children:[(0,u.jsx)(s.A4,{children:o}),(0,u.jsx)(O,{contentRef:f})]})})})});j.displayName=v;var b="AlertDialogTitle",w=n.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...n}=e,o=p(r);return(0,u.jsx)(a.Dx,{...o,...n,ref:t})});w.displayName=b;var R="AlertDialogDescription",N=n.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...n}=e,o=p(r);return(0,u.jsx)(a.dk,{...o,...n,ref:t})});N.displayName=R;var C=n.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...n}=e,o=p(r);return(0,u.jsx)(a.x8,{...o,...n,ref:t})});C.displayName="AlertDialogAction";var A="AlertDialogCancel",I=n.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...n}=e,{cancelRef:o}=D(A,r),l=p(r),s=(0,i.e)(t,o);return(0,u.jsx)(a.x8,{...l,...n,ref:s})});I.displayName=A;var O=({contentRef:e})=>{let t=`\`${v}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${v}\` by passing a \`${R}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${v}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return n.useEffect(()=>{let r=document.getElementById(e.current?.getAttribute("aria-describedby"));r||console.warn(t)},[t,e]),null},_=g,E=m,F=x,M=h,k=j,V=C,P=I,$=w,W=N},8712:function(e,t,r){r.d(t,{Dx:function(){return er},VY:function(){return et},aV:function(){return ee},dk:function(){return en},fC:function(){return J},h_:function(){return Q},jm:function(){return H},p8:function(){return j},x8:function(){return eo},xz:function(){return L}});var n=r(2265),o=r(5744),i=r(2210),a=r(6989),l=r(966),s=r(3763),u=r(9249),d=r(2759),c=r(2730),f=r(5606),p=r(9381),g=r(1244),m=r(3386),x=r(5859),h=r(7256),v=r(7437),y="Dialog",[D,j]=(0,a.b)(y),[b,w]=D(y),R=e=>{let{__scopeDialog:t,children:r,open:o,defaultOpen:i,onOpenChange:a,modal:u=!0}=e,d=n.useRef(null),c=n.useRef(null),[f=!1,p]=(0,s.T)({prop:o,defaultProp:i,onChange:a});return(0,v.jsx)(b,{scope:t,triggerRef:d,contentRef:c,contentId:(0,l.M)(),titleId:(0,l.M)(),descriptionId:(0,l.M)(),open:f,onOpenChange:p,onOpenToggle:n.useCallback(()=>p(e=>!e),[p]),modal:u,children:r})};R.displayName=y;var N="DialogTrigger",C=n.forwardRef((e,t)=>{let{__scopeDialog:r,...n}=e,a=w(N,r),l=(0,i.e)(t,a.triggerRef);return(0,v.jsx)(p.WV.button,{type:"button","aria-haspopup":"dialog","aria-expanded":a.open,"aria-controls":a.contentId,"data-state":U(a.open),...n,ref:l,onClick:(0,o.M)(e.onClick,a.onOpenToggle)})});C.displayName=N;var A="DialogPortal",[I,O]=D(A,{forceMount:void 0}),_=e=>{let{__scopeDialog:t,forceMount:r,children:o,container:i}=e,a=w(A,t);return(0,v.jsx)(I,{scope:t,forceMount:r,children:n.Children.map(o,e=>(0,v.jsx)(f.z,{present:r||a.open,children:(0,v.jsx)(c.h,{asChild:!0,container:i,children:e})}))})};_.displayName=A;var E="DialogOverlay",F=n.forwardRef((e,t)=>{let r=O(E,e.__scopeDialog),{forceMount:n=r.forceMount,...o}=e,i=w(E,e.__scopeDialog);return i.modal?(0,v.jsx)(f.z,{present:n||i.open,children:(0,v.jsx)(M,{...o,ref:t})}):null});F.displayName=E;var M=n.forwardRef((e,t)=>{let{__scopeDialog:r,...n}=e,o=w(E,r);return(0,v.jsx)(m.Z,{as:h.g7,allowPinchZoom:!0,shards:[o.contentRef],children:(0,v.jsx)(p.WV.div,{"data-state":U(o.open),...n,ref:t,style:{pointerEvents:"auto",...n.style}})})}),k="DialogContent",V=n.forwardRef((e,t)=>{let r=O(k,e.__scopeDialog),{forceMount:n=r.forceMount,...o}=e,i=w(k,e.__scopeDialog);return(0,v.jsx)(f.z,{present:n||i.open,children:i.modal?(0,v.jsx)(P,{...o,ref:t}):(0,v.jsx)($,{...o,ref:t})})});V.displayName=k;var P=n.forwardRef((e,t)=>{let r=w(k,e.__scopeDialog),a=n.useRef(null),l=(0,i.e)(t,r.contentRef,a);return n.useEffect(()=>{let e=a.current;if(e)return(0,x.Ry)(e)},[]),(0,v.jsx)(W,{...e,ref:l,trapFocus:r.open,disableOutsidePointerEvents:!0,onCloseAutoFocus:(0,o.M)(e.onCloseAutoFocus,e=>{e.preventDefault(),r.triggerRef.current?.focus()}),onPointerDownOutside:(0,o.M)(e.onPointerDownOutside,e=>{let t=e.detail.originalEvent,r=0===t.button&&!0===t.ctrlKey,n=2===t.button||r;n&&e.preventDefault()}),onFocusOutside:(0,o.M)(e.onFocusOutside,e=>e.preventDefault())})}),$=n.forwardRef((e,t)=>{let r=w(k,e.__scopeDialog),o=n.useRef(!1),i=n.useRef(!1);return(0,v.jsx)(W,{...e,ref:t,trapFocus:!1,disableOutsidePointerEvents:!1,onCloseAutoFocus:t=>{e.onCloseAutoFocus?.(t),t.defaultPrevented||(o.current||r.triggerRef.current?.focus(),t.preventDefault()),o.current=!1,i.current=!1},onInteractOutside:t=>{e.onInteractOutside?.(t),t.defaultPrevented||(o.current=!0,"pointerdown"!==t.detail.originalEvent.type||(i.current=!0));let n=t.target,a=r.triggerRef.current?.contains(n);a&&t.preventDefault(),"focusin"===t.detail.originalEvent.type&&i.current&&t.preventDefault()}})}),W=n.forwardRef((e,t)=>{let{__scopeDialog:r,trapFocus:o,onOpenAutoFocus:a,onCloseAutoFocus:l,...s}=e,c=w(k,r),f=n.useRef(null),p=(0,i.e)(t,f);return(0,g.EW)(),(0,v.jsxs)(v.Fragment,{children:[(0,v.jsx)(d.M,{asChild:!0,loop:!0,trapped:o,onMountAutoFocus:a,onUnmountAutoFocus:l,children:(0,v.jsx)(u.XB,{role:"dialog",id:c.contentId,"aria-describedby":c.descriptionId,"aria-labelledby":c.titleId,"data-state":U(c.open),...s,ref:p,onDismiss:()=>c.onOpenChange(!1)})}),(0,v.jsxs)(v.Fragment,{children:[(0,v.jsx)(X,{titleId:c.titleId}),(0,v.jsx)(G,{contentRef:f,descriptionId:c.descriptionId})]})]})}),T="DialogTitle",z=n.forwardRef((e,t)=>{let{__scopeDialog:r,...n}=e,o=w(T,r);return(0,v.jsx)(p.WV.h2,{id:o.titleId,...n,ref:t})});z.displayName=T;var B="DialogDescription",S=n.forwardRef((e,t)=>{let{__scopeDialog:r,...n}=e,o=w(B,r);return(0,v.jsx)(p.WV.p,{id:o.descriptionId,...n,ref:t})});S.displayName=B;var Y="DialogClose",q=n.forwardRef((e,t)=>{let{__scopeDialog:r,...n}=e,i=w(Y,r);return(0,v.jsx)(p.WV.button,{type:"button",...n,ref:t,onClick:(0,o.M)(e.onClick,()=>i.onOpenChange(!1))})});function U(e){return e?"open":"closed"}q.displayName=Y;var Z="DialogTitleWarning",[H,K]=(0,a.k)(Z,{contentName:k,titleName:T,docsSlug:"dialog"}),X=({titleId:e})=>{let t=K(Z),r=`\`${t.contentName}\` requires a \`${t.titleName}\` for the component to be accessible for screen reader users.

If you want to hide the \`${t.titleName}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://radix-ui.com/primitives/docs/components/${t.docsSlug}`;return n.useEffect(()=>{if(e){let t=document.getElementById(e);t||console.error(r)}},[r,e]),null},G=({contentRef:e,descriptionId:t})=>{let r=K("DialogDescriptionWarning"),o=`Warning: Missing \`Description\` or \`aria-describedby={undefined}\` for {${r.contentName}}.`;return n.useEffect(()=>{let r=e.current?.getAttribute("aria-describedby");if(t&&r){let e=document.getElementById(t);e||console.warn(o)}},[o,e,t]),null},J=R,L=C,Q=_,ee=F,et=V,er=z,en=S,eo=q}}]);